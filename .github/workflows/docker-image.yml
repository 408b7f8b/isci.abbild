name: Build and Publish isci.abbild

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0'

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build linux-x64
      run: dotnet publish -c Release -r linux-x64 -o ./tmp
      
    - name: Build linux-arm64  
      run: dotnet publish -c Release -r linux-arm64 -o ./tmp
        
    - name: Build windows-x64
      run: dotnet publish -c Release -r win-x64 -o ./tmp
      
    - uses: actions/upload-artifact@v3
      with:
        name: linux-x64
        path: ./tmp
        
    - uses: actions/upload-artifact@v3
      with:
        name: linux-arm64
        path: ./tmp
        
    - uses: actions/upload-artifact@v3
      with:
        name: windows-x64
        path: ./tmp
        
  docker-build:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download linux-x64 artifact
      uses: actions/download-artifact@v3
      with:
        name: linux-x64
        
    - name: Build and push linux-x64 image
      run: |
        docker build -t isci.abbild:linux-x64 .
        
    - name: Download linux-arm64 artifact  
      uses: actions/download-artifact@v3
      with:
        name: linux-arm64
        
    - name: Build and push linux-arm64 image
      run: |  
        docker build -t isci.abbild:linux-arm64 --platform=linux/arm64 .
        
    - name: Download windows-x64 artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-x64
        
    - name: Build and push windows-x64 image
      run: |
        docker build -t isci.abbild:windows-x64 --platform=windows/amd64 .
